<?xml version='1.0' encoding='utf-8'?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <packaging>pom</packaging>

    <groupId>com.whaleal.icefrog</groupId>
    <artifactId>icefrog</artifactId>
    <version>1.1.8</version>
    <name>icefrog</name>
    <description>icefrog是一个小而全的Java工具类库，通过静态方法封装，降低相关API的学习成本，提高工作效率，使Java拥有函数式语言般的优雅，让Java语言也可以“甜甜的”。</description>
    <url>https://github.com/whaleal/icefrog</url>

    <modules>
        <module>icefrog-all</module>
        <module>icefrog-bom</module>
        <module>icefrog-aop</module>
        <module>icefrog-bloomFilter</module>
        <module>icefrog-cache</module>
        <module>icefrog-core</module>
        <module>icefrog-cron</module>
        <module>icefrog-crypto</module>
        <module>icefrog-db</module>
        <module>icefrog-dfa</module>
        <module>icefrog-extra</module>
        <module>icefrog-http</module>
        <module>icefrog-log</module>
        <module>icefrog-script</module>
        <module>icefrog-setting</module>
        <module>icefrog-system</module>
        <module>icefrog-json</module>
        <module>icefrog-poi</module>
        <module>icefrog-captcha</module>
        <module>icefrog-socket</module>
        <module>icefrog-jwt</module>
        <module>icefrog-collections</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>utf-8</project.reporting.outputEncoding>

        <!-- versions -->
        <compile.version>8</compile.version>
        <junit.version>4.13.2</junit.version>
        <lombok.version>1.18.22</lombok.version>
    </properties>

    <dependencies>
        <!-- 全局单元测试 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--发布的标准，这个是按照whaleal 项目内部的标准的标准来做的-->
    <licenses>
        <license>
            <name>GNU LESSER GENERAL PUBLIC LICENSE Version 2.1</name>
            <url>https://docs.whaleal.com/licensing/GNU_LESSER_GENERAL_PUBLIC_LICENSE_Version_2.1</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!--这个和我们创建的issue相对应，
        需要打包的项目一定要放到我们所说的地址上面，也就是说这个地址一定要是我们的，否则我们没有权限
        tag：这个项目的分支，这里我放到了main分支里面
        url：项目的git地址，
        connection 和 developerConnection这两个我们也不太清楚，就按照这个格式去写吧
    -->
    <scm>
        <tag>main</tag>
        <url>git@github.com:whaleal/icefrog.git</url>
        <connection>scm:git:git@github.com:whaleal/icefrog.git</connection>
        <developerConnection>scm:git:git@github.com:whaleal/icefrog.git</developerConnection>
    </scm>

    <!--开发者：这里我们注册的时候写的名字和邮箱准确填写 ，id尽量和上面的id对应-->
    <developers>
        <developer>
            <name>caoshuai</name>
            <email>shuai.cao@jinmuinfo.com</email>
        </developer>
    </developers>

    <!--打包所需要的插件-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- 源码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <show>private</show>
                    <nohelp>true</nohelp>
                    <charset>UTF-8</charset>
                    <encoding>UTF-8</encoding>
                    <docencoding>UTF-8</docencoding>
                    <doclint>none</doclint>
                    <tags>
                        <tag>
                            <!-- 处理@date标签 -->
                            <name>date</name>
                            <placement>a</placement>
                        </tag>
                    </tags>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--部署-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <executions>
                    <execution>
                        <id>deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- GPG 打包插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--将组件部署到OSSRH并将其发布到Central Repository-->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.8</version>
                <extensions>true</extensions>
                <configuration>
                    <!--这里和我们此前在maven的server中配置的id一致-->
                    <serverId>icefrog</serverId>
                    <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--这里有两个仓库，releases和snapshots，url路径也差不多，
        选择放在什么地方主要是看我们的项目的名称是什么，
        好不我们这个项目的version是 <version>1.0-SNAPSHOT</version>
        那么就会放到snapshots这个仓库里面，如果是以RELEASES的话就会发布到另外一个仓库
    -->
    <distributionManagement>
        <repository>
            <id>icefrog</id><!--与settings.xml的server.id保持一致-->
            <url>https://s01.oss.sonatype.org/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>icefrog</id><!--与settings.xml的server.id保持一致-->
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>


</project>
